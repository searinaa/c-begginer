#include <iostream>
using namespace std;

//ФУНКЦИИ С ПАРАМЕТРАМИ, ДЕКЛАРАЦИЯ И ВЫЗОВ
/*
Параметры можно передавать по:
- ссылкам
- указателям
- переменных по значению (кроме тех типов данные, которые не передаются
по значению, например - массивы, они передаются указателями)

Прототипом функции в языке Си или C++ называется объявление функции, не 
содержащее тела функции, но указывающее имя функции, арность, типы аргументов и 
возвращаемый тип данных. В то время как определение функции описывает, что именно
делает функция, прототип функции может восприниматься как описание её интерфейса.

Например, в данном файле есть функция Sum, ее прототип:
void Sum(int a, int b) { тело функции пустое }
*/

//Пример функции, складываюшей два числа
void Sum(int a, int b) {
    cout << "Сумма равняется = " << a + b;
}

//ФУНКЦИИ ДЛЯ МАССИВА
void GetRandomArray(int arr[], const int size) {
    cout << "Вызвана функция для заполнения массива рандомными числами" << endl;
    for (int i = 0; i < size; i++) {
        arr[i] = rand() % 10;
        cout << "Значение ячейки " << i << " равно " << arr[i] << endl;
    }
}

int main() {
    setlocale(LC_ALL, "Russian");
//Входные числа для функции
    int x, y;
    cout << "Введите значения слагаемых через enter" << endl;
    cin >> x >> y;
    Sum(x,y);
    cout << endl;
    
//Входные данные для функции с массивом
    const int SIZE = 5;
    int massiv[SIZE];
    GetRandomArray(massiv, SIZE);
}
